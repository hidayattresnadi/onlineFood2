<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnlineFoodWebAPI</name>
    </assembly>
    <members>
        <member name="M:OnlineFoodWebAPI.Controllers.CustomerController.AddCustomer(OnlineFoodWebAPI.Models.Customer)">
            <summary>
            Adds a new customer to the system.
            </summary>
            <param name="customer">The new customer to add.</param>
            <returns>The created customer data.</returns>
            <remarks>
            Sample request:
            
                POST /Customer
                {
                   "Name":"dayat",
                   "Email":"dayat@gmail.com",
                   "PhoneNumber":"083234342",
                   "Address":"Bogor"
                }
                
                Note: 
                The Name field is required and has minimum length between 2 and 100.
                The Email field is required and format should be valid.
                The PhoneNumber is optional but if it is filled, the phone should be valid format.
                The Address is optional but if it is filled, the address should have maximal 200 characters.
                
            Sample response:
            
                {
                    "CustomerId": "a226a013-3c00-4aca-bd89-b3d72ddfd06e",,
                    "Name": "dayat888",
                    "Email":"dayat@gmail.com",
                    "PhoneNumber":"083234342",
                    "RegistrationDate": "2024-08-02T16:20:21.2001742+07:00"
                }
            </remarks>
            <response code="200">Returns the created menu item</response>
            <response code="400">If the Name field is missing, the Email is invalid, the PhoneNumber and the address is invalid</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.CustomerController.GetAllCustomers">
            <summary>
            Get all customers from the system.
            </summary>
            <returns>List of customers.</returns>
            <remarks>
            
            GET /Customer
            
            Sample response:
            
                   [
                      {
                         "customerId": "ff862475-2c48-4eec-8eeb-dbec19ba772b",
                         "Name": "dayat888",
                         "Email":"dayat@gmail.com",
                         "PhoneNumber":"083234342",
                         "RegistrationDate": "2024-08-02T16:20:21.2001742+07:00"
                       }
                    ]
            </remarks>
            <response code="200">Returns all of the menu items that have been added</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.CustomerController.GetCustomerById(System.Guid)">
            <summary>
            Get a customer from customer lists based on id.
            </summary>
            <param name="id">The chosen of user.</param>
            <returns>The customer with id from user input.</returns>
            <remarks>
            Sample param:
            
            "ff862475-2c48-4eec-8eeb-dbec19ba772b"
            
            GET /Customer/{id}
            
            Sample response:
            
                {
                    "CustomerId": "ff862475-2c48-4eec-8eeb-dbec19ba772b",
                    "Name": "dayat888",
                    "Email":"dayat@gmail.com",
                    "PhoneNumber":"083234342",
                    "RegistrationDate": "2024-08-02T16:20:21.2001742+07:00"
                }
            </remarks>
            <response code="200">Returns the customer</response>
            <response code="404">If customer is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.CustomerController.UpdateCustomer(OnlineFoodWebAPI.Models.Customer,System.Guid)">
            <summary>
            Updates an existing customer by id.
            </summary>
            <param name="customer">The customer data to update.</param>
            <param name="id">The chosen of customer id to update.</param>
            <returns>The updated customer data.</returns>
            <remarks>
            
            Sample param:
            
            "ff862475-2c48-4eec-8eeb-dbec19ba772b"
            
            Sample request:
            
                PUT /Customer/{id}
                {
                   "Name":"dayatkiki",
                   "Email":"dayat@gmail.com",
                   "PhoneNumber":"083234342",
                   "Address":"Bogor"
                }
                
                Note: 
                The Name field is required and has minimum length between 2 and 100.
                The Email field is required and format should be valid.
                The PhoneNumber is optional but if it is filled, the phone should be valid format.
                The Address is optional but if it is filled, the address should have maximal 200 characters.
                
            Sample response:
            
                {
                    "CustomerId": "ff862475-2c48-4eec-8eeb-dbec19ba772b",
                    "Name": "dayatkiki",
                    "Email":"dayat@gmail.com",
                    "PhoneNumber":"083234342",
                    "RegistrationDate": "2024-08-02T16:20:21.2001742+07:00"
                }
            </remarks>
            <response code="200">Returns the created menu item</response>
            <response code="400">If the Name field is missing, the Price is invalid, or the Category is invalid</response>
            <response code="404">If the menu item is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.CustomerController.DeleteCustomer(System.Guid)">
            <summary>
            Delete a customer from customer lists based on id.
            </summary>
            <param name="id">The chosen of customer data to be deleted.</param>
            <returns>String message if data is deleted or not.</returns>
            <remarks>
            
            Sample param:
            
            "ff862475-2c48-4eec-8eeb-dbec19ba772b"
            
            DELETE /Menu/{id}
            
            Sample response: 
            
            "Customer Terhapus"
            </remarks>
            <response code="200">Returns string : "Customer Terhapus"</response>
            <response code="404">If the customer is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.MenuController.AddMenu(OnlineFoodWebAPI.Models.Menu)">
            <summary>
            Adds a new menu item to the system.
            </summary>
            <param name="menu">The menu item to add.</param>
            <returns>The created menu item.</returns>
            <remarks>
            All the parameters in request body cannot be null.
            Sample request:
            
                POST /Menu
                {
                   "Name": "Bakso",
                   "Price": 10000,
                   "Category": "Food"
                }
                
                Note: 
                The Name field is required and has minimum length between 2 and 100.
                The Price field should be between 0.01 and 100000
                The Category field can only be populated with the values: "Food", "Beverage", "Dessert".
                
            Sample response:
            
                {
                    "id": "952bc6c4-2aef-40f4-b0dc-464d305e7d6f",
                    "name": "Bakso",
                    "price": 10000,
                    "category": "Food",
                    "rating": 0,
                    "createdAt": "2024-08-02T15:54:28.4873094+07:00",
                    "isAvailable": true,
                    "ratingCustomers": []
                }
            </remarks>
            <response code="200">Returns the created menu item</response>
            <response code="400">If the Name field is missing, the Price is invalid, or the Category is invalid</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.MenuController.GetMenus">
            <summary>
            Get all menu items from the system.
            </summary>
            <returns>List of menu items.</returns>
            <remarks>
            GET /Menu
            
            Sample response:
            
                   [
                      {
                         "id": "f106d477-1299-45fd-9345-6bf39f161b3e",
                         "name": "Bakso2",
                         "price": 20000,
                         "category": "Food",
                         "rating": 3.5,
                         "createdAt": "2024-08-02T15:47:01.2529995+07:00",
                         "isAvailable": false,
                         "ratingCustomers": [4,3]
                       },
                       {
                          "id": "952bc6c4-2aef-40f4-b0dc-464d305e7d6f",
                          "name": "Bakso",
                          "price": 10000,
                          "category": "Food",
                          "rating": 0,
                          "createdAt": "2024-08-02T15:54:28.4873094+07:00",
                          "isAvailable": true,
                          "ratingCustomers": []
                        }
                    ]
            </remarks>
            <response code="200">Returns all of the menu items that have been added</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.MenuController.GetMenuById(System.Guid)">
            <summary>
            Get a menu item from menu Item lists based on id.
            </summary>
            <param name="id">The chosen of menu id from user.</param>
            <returns>The menu item with id from user input.</returns>
            <remarks>
            Sample param:
            
            "952bc6c4-2aef-40f4-b0dc-464d305e7d6f"
            
            GET /Menu/{id}
            
            Sample response:
            
                {
                    "id": "952bc6c4-2aef-40f4-b0dc-464d305e7d6f",
                    "name": "Bakso",
                    "price": 10000,
                    "category": "Food",
                    "rating": 0,
                    "createdAt": "2024-08-02T15:54:28.4873094+07:00",
                    "isAvailable": true,
                    "ratingCustomers": []
                }
            </remarks>
            <response code="200">Returns the menu item</response>
            <response code="404">If the menu item is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.MenuController.UpdateMenuById(OnlineFoodWebAPI.Models.Menu,System.Guid)">
            <summary>
            Updates an existing menu item by id from user.
            </summary>
            <param name="menu">The menu item to add.</param>
            <param name="id">The chosen of menu id from user to update.</param>
            <returns>The updated menu menu item.</returns>
            <remarks>
            All the parameters in request body cannot be null.
            
            Sample param:
            
            "952bc6c4-2aef-40f4-b0dc-464d305e7d6f"
            
            Sample request:
            
                PUT /Menu/{id}
                {
                   "Name": "Bakso Ayam",
                   "Price": 11000,
                   "Category": "Food"
                }
                
                Note: 
                The Name field is required and has minimum length between 2 and 100.
                The Price field should be between 0.01 and 100000
                The Category field can only be populated with the values: "Food", "Beverage", "Dessert".
                
            Sample response:
            
                {
                    "id": "952bc6c4-2aef-40f4-b0dc-464d305e7d6f",
                    "name": "Bakso Ayam",
                    "price": 11000,
                    "category": "Food",
                    "rating": 0,
                    "createdAt": "2024-08-02T15:54:28.4873094+07:00",
                    "isAvailable": true,
                    "ratingCustomers": []
                }
            </remarks>
            <response code="200">Returns the created menu item</response>
            <response code="400">If the Name field is missing, the Price is invalid, or the Category is invalid</response>
            <response code="404">If the menu item is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.MenuController.DeleteMenu(System.Guid)">
            <summary>
            Delete a menu item from menu Item lists based on id.
            </summary>
            <param name="id">The chosen of menu id from user.</param>
            <returns>The menu item with id from user input.</returns>
            <remarks>
            
            Sample param:
            
            "952bc6c4-2aef-40f4-b0dc-464d305e7d6f"
            
            DELETE /Menu/{id}
            
            Sample response: 
            
            "Menu berhasil didelete"
            </remarks>
            <response code="200">Returns string : "Menu berhasil didelete" </response>
            <response code="404">If the menu item is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.MenuController.AddRating(System.Guid,System.Int32)">
            <summary>
            Updates property Rating and RatingCustomers at existing menu item from user.
            </summary>
            <param name="id">The menu item to add rating.</param>
            <param name="rating">rating from user.</param>
            <returns>The message to shows status for updating rating</returns>
            <remarks>
            
            Sample param:
            
            "952bc6c4-2aef-40f4-b0dc-464d305e7d6f"
            
            Sample request:
            
                PUT /Menu/{id}
                4
                
                Note: 
                The Rating should be between 0 and 5.
                
            Sample response:
            
            "berhasil menambah rating";
            </remarks>
            <response code="200">Returns string that mentions update rating is success</response>
            <response code="400">If rating input is more than 5 or less than 0</response>
            <response code="404">If the menu item is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.OrderController.PlaceOrder(OnlineFoodWebAPI.Models.Order)">
             <summary>
             Adds a new order to the system.
             </summary>
             <param name="order">The new order to add.</param>
             <returns>The created order data.</returns>
             <remarks>
             Sample request:
             
                 POST /Order
                 {
                    "CustomerId":"ff862475-2c48-4eec-8eeb-dbec19ba772b",
                    "Note":"jangan pedes ya",
                    "MenuId":["f106d477-1299-45fd-9345-6bf39f161b3e","952bc6c4-2aef-40f4-b0dc-464d305e7d6f"]
                 }
                 
                 Note: 
                 The CustomerId should be filled.
                 The MenuId should be valid.
                 
             Sample response:
                    {
                "id": "2aacc9d4-f526-4163-adb7-82c4c6f1892b",
                "customerId": "ff862475-2c48-4eec-8eeb-dbec19ba772b",
                "orderDate": "2024-08-02T15:54:54.4236837+07:00",
                "totalPrice": 30000,
                "orderStatus": "Processed",
                "note": "jangan pedes ya",
                "menuId": [
                    "f106d477-1299-45fd-9345-6bf39f161b3e",
                    "952bc6c4-2aef-40f4-b0dc-464d305e7d6f"
                ],
                "menuItems": [
                    {
                        "id": "f106d477-1299-45fd-9345-6bf39f161b3e",
                        "name": "Bakso2",
                        "price": 20000,
                        "category": "Food",
                        "rating": 3.5,
                       "createdAt": "2024-08-02T15:47:01.2529995+07:00",
                        "isAvailable": false,
                        "ratingCustomers": [
                            4,
                            3
                        ]
                },
                    {
                        "id": "952bc6c4-2aef-40f4-b0dc-464d305e7d6f",
                        "name": "Bakso",
                        "price": 10000,
                        "category": "Food",
                        "rating": 0,
                        "createdAt": "2024-08-02T15:54:28.4873094+07:00",
                        "isAvailable": true,
                        "ratingCustomers": []
            }
                ]
            }
             </remarks>
             <response code="200">Returns the created order</response>
             <response code="400">If customer is not found, the Email menu is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.OrderController.DisplayOrderDetail(System.Guid)">
             <summary>
             Get an order based on id.
             </summary>
             <param name="id">The chosen of order id from user.</param>
             <returns>The order item with id from user input.</returns>
             <remarks>
             Sample param:
             
             "2aacc9d4-f526-4163-adb7-82c4c6f1892b"
             
             GET /Order/{id}
             
             Sample response:
             
                    {
                "id": "2aacc9d4-f526-4163-adb7-82c4c6f1892b",
                "customerId": "ff862475-2c48-4eec-8eeb-dbec19ba772b",
                "orderDate": "2024-08-02T15:54:54.4236837+07:00",
                "totalPrice": 30000,
                "orderStatus": "Processed",
                "note": "jangan pedes ya",
                "menuId": [
                    "f106d477-1299-45fd-9345-6bf39f161b3e",
                    "952bc6c4-2aef-40f4-b0dc-464d305e7d6f"
                ],
                "menuItems": [
                    {
                        "id": "f106d477-1299-45fd-9345-6bf39f161b3e",
                        "name": "Bakso2",
                        "price": 20000,
                        "category": "Food",
                        "rating": 3.5,
                       "createdAt": "2024-08-02T15:47:01.2529995+07:00",
                        "isAvailable": false,
                        "ratingCustomers": [
                            4,
                            3
                        ]
                },
                    {
                        "id": "952bc6c4-2aef-40f4-b0dc-464d305e7d6f",
                        "name": "Bakso",
                        "price": 10000,
                        "category": "Food",
                        "rating": 0,
                        "createdAt": "2024-08-02T15:54:28.4873094+07:00",
                        "isAvailable": true,
                        "ratingCustomers": []
            }
                ]
            }
             </remarks>
             <response code="200">Returns the order item</response>
             <response code="404">If the order is not found</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.OrderController.CancelOrder(System.Guid)">
            <summary>
            Update an order to status "Cancelled".
            </summary>
            <param name="id">The chosen of order id from user.</param>
            <returns>String message if order can be cancelled.</returns>
            <remarks>
            Sample param:
            
            "2aacc9d4-f526-4163-adb7-82c4c6f1892b"
            
            PATCH /Order/{id}/cancelOrder
            
            Sample response:
            
            "Order sudah dicancel"
            </remarks>
            <response code="200">Returns string</response>
            <response code="404">If the order is not found</response>
            <response code="400">If the order status is not "Processed"</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.OrderController.UpdateOrderStatus(System.Guid,System.String)">
            <summary>
            Update an order to status "Cancelled".
            </summary>
            <param name="id">The chosen of order id from user.</param>
            <param name="orderStatus">The chosen of order status from user.</param>
            <returns>String message if order status can be changed.</returns>
            <remarks>
            Sample param:
            
            "2aacc9d4-f526-4163-adb7-82c4c6f1892b"
            
            PATCH /Order/{id}/updateOrderStatus
            
            Sample response:
            
            "Order status sudah berubah"
            </remarks>
            <response code="200">Returns string</response>
            <response code="404">If the order is not found</response>
            <response code="400">If the order status is not "Processed"</response>
        </member>
        <member name="M:OnlineFoodWebAPI.Controllers.OrderController.GetOrderStatus(System.Guid)">
            <summary>
            Get order status by id order.
            </summary>
            <param name="id">The chosen of order id from user.</param>
            <returns>String message if order can be cancelled.</returns>
            <remarks>
            Sample param:
            
            "2aacc9d4-f526-4163-adb7-82c4c6f1892b"
            
            PATCH /Order/{id}/updateOrderStatus
            
            Sample response:
            
            "Order status sudah berubah"
            </remarks>
            <response code="200">Returns string</response>
            <response code="404">If the order is not found</response>
        </member>
    </members>
</doc>
